<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Hugo on Molina&#39;s Tech diary</title>
    <link>http://blog.molina.jp/categories/hugo/</link>
    <description>Recent content in Hugo on Molina&#39;s Tech diary</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>js-JP</language>
    <lastBuildDate>Thu, 05 Sep 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="http://blog.molina.jp/categories/hugo/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Netlifyで記事の公開</title>
      <link>http://blog.molina.jp/blog/netlify%E3%81%A7%E8%A8%98%E4%BA%8B%E3%81%AE%E5%85%AC%E9%96%8B/</link>
      <pubDate>Thu, 05 Sep 2019 00:00:00 +0000</pubDate>
      
      <guid>http://blog.molina.jp/blog/netlify%E3%81%A7%E8%A8%98%E4%BA%8B%E3%81%AE%E5%85%AC%E9%96%8B/</guid>
      <description>前回の記事でHugoでサイトを作るところまで書きましたが, 今回は実際に公開するところまでを書こうと思います.
ブログを公開する方法 Hugoなどの静的サイトジェネレーターで生成したブログを公開するには, いくつか方法があります.
自分のサーバーに置く 自分のサーバーを持っているのならば, ビルドしたファイル群をそこにおいてやって外部からアクセスできるようにすれば良いです. ApacheとかNginxとかで簡単に設定できます. まぁ, 自分のサーバー持ってる人なら説明するまでもない気がしますが……
ホスティングサービスを利用する とりあえずページを公開したいけどわざわざサーバーを借りるほどでもないかなぁという時には外部のホスティングサービスを使うという方法があります. 個人で使用する程度であれば, 無料で使えるホスティングサービスがいくつかあるので, それらを使えば手軽にブログを公開できます.
例えば, GitHub PagesとかGitLab Pagesを使えば, 簡単にサイトを公開できますし. やっている人もたくさんいるので調べれば情報が出てきます.
今回はその中で, Netlifyというホスティングサービスを利用しました.
Netlifyの特徴 公式サイトの説明から適当に引用してくると
 GitHub/GitLab/Bitbucketと連携して指定したブランチが更新されれば自動でbuild, deployまでしてくれる 無料プランでも独自ドメインを使用可能 難しい設定なしで自動でLet&amp;rsquo;s Encryptによるhttps証明書発行が可能 フォームなども設置可能  あたりが挙げられます. 無料プランでも一ヶ月あたりの転送量は100Gまで利用可能で, 個人で使用するぶんには十分でしょう(たぶん).
方法 前準備 公開したいサイトのプロジェクトフォルダをGitHub/GitLab/Bitbucketにpushします.
Netlifyにログイン 登録がまだの場合は登録して, ログインします. GitHub/GitLab/Bitbucketのアカウントで登録できます.
Gitリポジトリと連携 ログインすると, 右の方に「New site from Git」ボタンがあるのでクリックします.  すると連携可能なサービスが出てくるので, 自分の使うサービスをクリックします. Gitログインすると, どのリポジトリと連携するか聞かれるので, 自分のサイトのリポジトリを選択します.
Webサイトを設定 サイトの設定をします. もうすでにビルドが終わってソースコードがある場合は, そのフォルダを設定します. (例:publicなど)
HugoやGarsbyなどを使っている場合は, Netlify側でビルドすることもできます. ビルドコマンドはHugoの場合はhugoでいけました.
公開内容を確認 以上でサイトの公開は終了です. 初期のままだと初期ドメインが変なので, Site settingsからSite nameを変更すれば好きなドメインにすることができます.</description>
    </item>
    
    <item>
      <title>Hugoでブログ的なものを作る</title>
      <link>http://blog.molina.jp/blog/hugo%E3%81%A7%E3%83%96%E3%83%AD%E3%82%B0%E7%9A%84%E3%81%AA%E3%82%82%E3%81%AE%E3%82%92%E4%BD%9C%E3%82%8B/</link>
      <pubDate>Tue, 03 Sep 2019 00:00:00 +0000</pubDate>
      
      <guid>http://blog.molina.jp/blog/hugo%E3%81%A7%E3%83%96%E3%83%AD%E3%82%B0%E7%9A%84%E3%81%AA%E3%82%82%E3%81%AE%E3%82%92%E4%BD%9C%E3%82%8B/</guid>
      <description>とりあえずHugoでブログを作ったのでその記録を残しておきます.
Hugoとは 静的サイトジェネレーターの1つです. 静的サイトジェネレーターについて詳しくはggってください. めちゃくちゃ雑に説明するとホームページをhtml + css + JavaScriptでいい感じに作れるものです.
静的サイトジェネレーターにはいろいろ種類がありますが, 公式サイト曰くHugoはビルドが速いそうです. Go言語で作られているらしい. ちょっと調べた感じあんまりテーマはそこまで豊富でないのかな. まぁいいや. 別にHugoにこだわりはなかったんですが, 自分の周りにHugoを使ってる人が多かったのもあってHugoにしました. 何か困ったときに周りに聞ける人がいるの大事.
環境構築 Ubuntu apt installで入ると思います. そんなに苦労しなかったので特に説明しません. おしまい. gitが入ってない場合はgitも入れておくことをおすすめします. こちらもapt installで入ると思います.
Windows なんかchocolateyとかScoopとか使えばコマンドで入るらしいですね. 面白そうなので今度試してみよう.
とりあえず情弱Windowsユーザーなので手動で入れます. 64bit前提で話をすすめます.
まず, 公式のgithubからhugo_extended_0.57.2_Windows-64bit.zip を落としてきます. 別にextendedじゃないやつでもいいんですけど動かないテーマがあったりするので特に理由がなければextendedをおすすめします.
次に, 落としてきたzipファイルを展開します. 展開先はどこでもいいですが, Cドライブ直下あたりがいいんじゃないでしょうか. 自分はCドライブ直下に新たにhugoというフォルダを作ってそこに中身のファイルを展開しました. 以下, C:\hugoにhugo.exeがあるという前提で話を進めます.
ファイルの展開が終わったらパスを通します. パスを通すってなんぞやって人はここを読むと良いと思います. https://proengineer.internous.co.jp/content/columnfeature/5205
具体的な作業としては, システムの詳細設定の画面を開きます. スタートメニューの検索窓で「システムの詳細設定」とでも打てば出てくると思います. そこの右下にある「環境変数」をクリック  環境変数の「Path」を選択し編集をクリックします.  新規をクリックすると新しいパスを入力できるようになるので, 「hugo.exe」をおいてあるパス(自分の場合はC:\hugo)を入力してOKをします.  これでパスは通っているはずなんですが, Windowsは気まぐれなので再起動しないと通ってないことがあります(通っていたと思いきや途中で通らなくなることもあります). 再起動することをおすすめします.
とりあえず再起動が終わったらコマンドプロンプトとかを開いてちゃんとインストールできてるか確認します. ところで最近, Microsoftはコマンドプロンプトの代わりにWindowsPowerShellを推しているようですね. 右クリックメニューからコマンドプロンプトが消えててびっくりしてしまった. まぁ今回はどっちでやってもいいと思います.
コマンドプロンプトを開きたい場合は, スタートメニューの検索窓で「コマンドプロンプト」と入力するとコマンドプロンプトが開きます. コマンドプロンプトに
hugo version  と入力してバージョン番号が表示されたら成功です.</description>
    </item>
    
    <item>
      <title>ブログを始めてみました</title>
      <link>http://blog.molina.jp/blog/my-first-post/</link>
      <pubDate>Tue, 20 Aug 2019 00:00:00 +0000</pubDate>
      
      <guid>http://blog.molina.jp/blog/my-first-post/</guid>
      <description>こんにちは Molinaです.
ブログを作りました. 日々の出来事を綴っていこうと思います.
動機 昔から自分から情報を発信しようという気持ちはあったのですが, あまりネットに恵まれていない時期があったこともあって特に何もすることなく時が過ぎて行きました.
最近, 学ロボを引退したこともあって時間ができ, とりあえずブログなるものを作ってみるかぁという気持ちになったので作りました.
まぁいろいろ書いていきたいと思います.
とりあえずこのブログを作るまでの経緯とか.
ブログをはじめようとする ブログをやるにはいくつか選択肢があると思いますが, 大きく分けると
 ブログが書ける外部のサービスを利用する 自分でホームページなりを作って公開する  となると思います. 要するに自分でやるか外部のサービスを利用するかという分け方です.
別に情報発信するだけなら外部のサービスを使えばいいんですが, あんまり融通が効かなさそうなイメージ(レイアウトとか広告とか)があったのと, 移行したくなったときにめんどくさそうだなぁというのがあって個人的にはあまり惹かれませんでした.
あと個人的にはサーバーを立ててみたいというのがあったので, 自分でサーバーを建ててWordpressでも動かすかぁという感じで考えていました.
とりあえずサーバーを建ててみる ところで世の中にはRaspberry Piというのがあって, これを使ってサーバーを立てる人が一定数いるという話を耳に挟んだので自分もRaspberry Piを購入してサーバーを立ててみました.
なんか無限につまずいたんですがとりあえずWordpressを立てる事はできました.
ここらへんの話はまた気が向いたら書こうかと思います.
で, Wordpressを立てて弄ってみたんですがあんまりしっくり来ませんでした. 簡単に作れるのはいいんですが更新とかめんどくさい. 更新失敗して一回破壊しかけたし.
なんか調べていると最近は静的サイトジェネレーターでブログを作っているのが流行っている？っぽいのでこれを試して見ようと思いました.
Hugoでサイトを作る とりあえずHugoで作ってみました.
なぜHugoにしたかというと名前を聞いたことがあったのと, それなりにユーザーがいそうであること, あとはコンパイルが速い(らしい)ことあたりですかね. そこまでHugoにこだわりがあるわけじゃないです. まぁ別に困ったときにググったら情報がある程度出てくるなら何でもいいと思います.
具体的な環境構築とかは別の記事に書こうと思います.
公開 せっかくサーバー立てたのでそこで公開しても良かったんですが, とりあえず今流行っているらしいNetlifyで公開しました. まぁ, 引っ越すのもそんな大変じゃないだろうしなんかあったら引っ越すかもしれません.
自分のサーバーで公開しなかったのには今後サーバー管理をどうしていくか微妙であるというのがあります. ラズパイ, ブログ置いとくくらいなら別に大したことじゃないですが, 今後色々動かしていくにはスペックが貧弱すぎないかなぁという気持ちですね.
サーバー用にもっと強いPCを用意するのも無しではないけれど, ネットで色々調べてみると, 自宅でサーバー運営するのリスクしかないなぁと. 火事になるリスクが割とありますし.
電気代とかサーバー用のPC用意するとか考えると費用の点からもVPSでも借りるのがいいんだろうけど, まだあまり考えが固まっていないのでもうちょっと考えてから決めようかなぁ………</description>
    </item>
    
  </channel>
</rss>